version: '3.8'

services:
  carla:
    image: carlasim/carla:0.9.14
    container_name: carla
    command: ./CarlaUE4.sh -nosound -RenderOffScreen
    privileged: true
    runtime: nvidia
    ports:
     - 2000-2002:2000-2002
    environment:
     - DISPLAY=$DISPLAY
     - NVIDIA_VISIBLE_DEVICES=all
     - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
     - /tmp/.X11-unix:/tmp/.X11-unix
     - ./carla/logs:/home/carla/carlalog
     - /usr/share/vulkan/icd.d:/usr/share/vulkan/icd.d
    devices:
     - nvidia.com/gpu=all
  #  deploy:
  #    resources:
  #      reservations:
  #        devices:
  #          - driver: nvidia
  #            count: 1
  #            capabilities: [gpu]

  scenarioloader:
    build:
      context: ./
      dockerfile: scenario_loader/Dockerfile
    container_name: scenarioloader
    environment:
      - CARLA_SERVER=$CARLA_SERVER
      - MAP=Town06
    restart: on-failure
    healthcheck:
      test: ls loader_done
      interval: 5s
      timeout: 10s
      start_period: 20s
      retries: 5
    depends_on:
      carla:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3.12
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq
    # Succeeds when RabbitMQ is fully available. Dependents
    # should wait for the health check before starting to
    # avoid restart loops
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  drive:
    build:
      context: ./
      dockerfile: drive/Dockerfile
    container_name: drive
    environment:
      - HUD_VERSION=$HUD_VERSION
      - CARLA_SERVER=$CARLA_SERVER
      - MQ_SERVER=rabbitmq:5672
      # Debug Info
      - CC_SPEED=$CC_SPEED
    ports:
      - 5800:5800
      - 5900:5900
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy 
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # positionsensor:
  #   build:
  #     context: ./
  #     dockerfile: position_sensor/Dockerfile
  #   container_name: positionsensor
  #   environment:
  #     - CARLA_SERVER=$CARLA_SERVER
  #     - MQ_SERVER=rabbitmq:5672
  #   depends_on:
  #     - rabbitmq
  #     - drive
  #   # RabbitMQ's container reports being up before it's finished initializing,
  #   # so this one fails to connect and crashes. Unfortunately this will
  #   # cause a restart loop if there is a genuine failure as well.
  #   restart: on-failure

  obstaclesensor:
    build:
     context: ./
     dockerfile: obstacle_sensor/Dockerfile
    container_name: obstaclesensor
    environment:
      - CARLA_SERVER=$CARLA_SERVER
      - MQ_SERVER=rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy
    restart: on-failure
  
  obstaclehandling:
    build: 
      context: ./
      dockerfile: obstacle_handling/Dockerfile
    container_name: obstaclehandling
    environment:
      - CARLA_SERVER=$CARLA_SERVER
      - MQ_SERVER=rabbitmq:5672
      - VERSION=$OBSTACLE_DETECTION_VERSION
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy
    restart: on-failure

  speedsensor:
    build:
      context: ./
      dockerfile: speed_sensor/Dockerfile
    container_name: speedsensor
    environment:
      - CARLA_SERVER=$CARLA_SERVER
      - MQ_SERVER=rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy 
    extra_hosts:
      - "host.docker.internal:host-gateway"


  cruisecontrol:
    build: 
      context: ./
      dockerfile: cruise_control_handling/Dockerfile
    container_name: cruisecontrol
    environment:
      - MQ_SERVER=rabbitmq:5672
      - CC_SPEED=$CC_SPEED
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy

  control:
    build: 
      context: ./
      dockerfile: control_handling/Dockerfile
    container_name: control
    environment:
      - MQ_SERVER=rabbitmq:5672
      - CC_SPEED=$CC_SPEED
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy

  throttleactuator:
    build:
      context: ./
      dockerfile: throttle_actuator/Dockerfile
    container_name: throttleactuator
    environment:
      - CARLA_SERVER=$CARLA_SERVER
      - MQ_SERVER=rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      scenarioloader:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
